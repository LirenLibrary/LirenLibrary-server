apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'jetty'


version = 1.0

archivesBaseName = 'lirenlibrary'

sourceCompatibility = 1.6
targetCompatibility = 1.6


ext {
    junitVersion = '4.11'
    springVersion = '3.1.3.RELEASE'
    hibernateVersion = '4.1.8.Final'
}

configurations {
    liquibase
    mysql
    compile {extendsFrom mysql}
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    compile(
            "org.springframework:spring-core:${springVersion}",
            "org.springframework:spring-beans:${springVersion}",
            "org.springframework:spring-context-support:${springVersion}",
            "org.springframework:spring-orm:${springVersion}",
            "org.springframework:spring-jdbc:${springVersion}",
            "org.springframework:spring-aop:${springVersion}",
            "org.springframework:spring-web:${springVersion}",
            "org.springframework:spring-webmvc:${springVersion}",
            "org.freemarker:freemarker:2.3.19",
            "org.hibernate:hibernate-core:${hibernateVersion}",
            "org.hibernate:hibernate-entitymanager:${hibernateVersion}",
            "cglib:cglib:2.2.2",
            "c3p0:c3p0:0.9.1.2",
            "com.sun.jersey:jersey-core:1.16",
            "com.sun.jersey:jersey-servlet:1.16",
            "com.sun.jersey:jersey-server:1.16",
            "com.sun.jersey.contribs:jersey-spring:1.16",
            "com.sun.jersey:jersey-json:1.16",
            "org.slf4j:slf4j-api:1.7.2",
            "org.slf4j:slf4j-log4j12:1.7.2",
            "log4j:log4j:1.2.17"
    )

    compile()

    mysql(
            "mysql:mysql-connector-java:5.1.22"
    )

    liquibase(
            "org.liquibase:liquibase-core:2.0.5"
    )

    providedRuntime(
            "javax.servlet:servlet-api:2.5"
    )


    testCompile(
            "junit:junit:${junitVersion}",
            "org.springframework:spring-test:${springVersion}"
    )
}

task loadEnvironment {
    description = 'load environment properties.'
    group = 'liren'
}

loadEnvironment << {
    project.ext['env'] = environment()
    println "current environment:${env}"

    loadDatabaseProps()
}

def loadDatabaseProps() {
    def propsFilePath = "src/main/resources/database.properties"
    if ('local' != env) propsFilePath = "database/database.${env}.properties"
    println "loading ${propsFilePath}"

    file(propsFilePath).withReader { reader ->
        configure(new Properties()) { load(reader) }.each { key, value ->
            def camelKey = key.split('\\.')*.capitalize().join()
            camelKey = camelKey.replaceFirst(camelKey[0], camelKey[0].toLowerCase())
            println "${camelKey}=${value}"
            project.ext[camelKey] = value
        }
    }
}

def environment() {
    System.properties['env'] == null ? 'local' : System.properties['env']
}


jettyRun {
    httpPort 8080
    contextPath 'lirenlibrary'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.3'
}

apply from: 'migration.gradle'
