apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'jetty'

version = 1.0

archivesBaseName = 'lirenlibrary'

sourceCompatibility = 1.6
targetCompatibility = 1.6

ext {
    junitVersion = '4.11'
    springVersion = '3.2.0.RELEASE'
    hibernateVersion = '4.1.8.Final'
    env = environment()
}

/**
 * Put before other configurations to load environmental properties ahead
 */
loadProperties "env/${env}/database.properties"

configurations {
    liquibase
    mysql
    jsch
    compile { extendsFrom mysql }

    all*.exclude group: "commons-logging", module: "commons-logging"
}

repositories {
//    mavenLocal()
    mavenCentral()
    mavenRepo name: 'Springframwork Milestone', url: 'http://repo.springsource.org/milestone'
}

dependencies {

    compile(
            "org.springframework:spring-core:${springVersion}",
            "org.springframework:spring-beans:${springVersion}",
            "org.springframework:spring-context-support:${springVersion}",
            "org.springframework:spring-orm:${springVersion}",
            "org.springframework:spring-jdbc:${springVersion}",
            "org.springframework:spring-aop:${springVersion}",
            "org.springframework:spring-web:${springVersion}",
            "org.springframework:spring-webmvc:${springVersion}",
            "org.freemarker:freemarker:2.3.19",
            "org.hibernate:hibernate-core:${hibernateVersion}",
            "org.hibernate:hibernate-entitymanager:${hibernateVersion}",
            "c3p0:c3p0:0.9.1.2",
            "com.sun.jersey:jersey-core:1.16",
            "com.sun.jersey:jersey-servlet:1.16",
            "com.sun.jersey:jersey-server:1.16",
            "com.sun.jersey.contribs:jersey-spring:1.16",
            "com.sun.jersey:jersey-json:1.16",
            "org.slf4j:slf4j-api:1.7.2",
            "org.slf4j:jcl-over-slf4j:1.7.2",
            "ch.qos.logback:logback-classic:1.0.9",
            "ch.qos.logback:logback-core:1.0.9",
            "com.google.guava:guava:14.0-rc1",
            "org.yaml:snakeyaml:1.11",
            "joda-time:joda-time:2.1"

    )

    mysql(
            "mysql:mysql-connector-java:5.1.22"
    )

    liquibase(
            "org.liquibase:liquibase-core:2.0.5"
    )

    jsch(
            "org.apache.ant:ant-jsch:1.8.4",
            "com.jcraft:jsch:0.1.49"
    )

    providedRuntime(
            "javax.servlet:servlet-api:2.5"
    )


    testCompile(
            "junit:junit:${junitVersion}",
            "org.mockito:mockito-core:1.9.5",
            "org.springframework:spring-test:${springVersion}"
    )
}

sourceSets {
    main {
        resources {
            srcDir "env/${env}"
        }
    }
}

war {
    archiveName = 'lirenlibrary.war'
}

jettyRun {
    httpPort 8080
    contextPath 'lirenlibrary'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.3'
}

apply from: 'migration.gradle'
apply from: 'deployment.gradle'


private def environment() {
    def env = System.properties['env'] == null ? 'local' : System.properties['env']
    logger.lifecycle "Current environment: ${env}"
    env
}

private void loadProperties(propFile) {
    logger.lifecycle "Loading property file ${propFile}"

    def properties = new Properties()
    new File(propFile).withInputStream { properties.load it }

    properties.each { key, value ->
        ext.setProperty camelCase(key), evaluateValue(value, properties)
//        logger.lifecycle "${camelCase(key)} = ${ext[camelCase(key)]}"
    }

}

private def camelCase(key) {
    def capitalizedKey = key.split('\\.')*.capitalize().join()
    capitalizedKey.replaceFirst(capitalizedKey[0], capitalizedKey[0].toLowerCase())
}

private def evaluateValue(value, properties) {
    def matcher = (value =~ /(.*?)\$\{(.*?)\}(.*)/)
    if(matcher.find()) {
        return evaluateValue(matcher.group(1) + properties[matcher.group(2)] + matcher.group(3), properties)
    }
    return value;
}
